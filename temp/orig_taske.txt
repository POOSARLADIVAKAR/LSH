inmathematicsandcomputersciencedynamicprogrammingisamethodofsolvingproblemsthatexhibitthepropertiesofoverlappingsubproblemsandoptimalsubstructuredescribedbelowthemethodtakesmuchlesstimethannaivemethodsthetermwasoriginallyusedinthe1940sbyrichardbellmantodescribetheprocessofsolvingproblemswhereoneneedstofindthebestdecisionsoneafteranotherby1953hehadrefinedthistothemodernmeaningthefieldwasfoundedasasystemsanalysisandengineeringtopicthatisrecognizedbytheieeebellmanscontributionisrememberedinthenameofthebellmanequationacentralresultofdynamicprogrammingwhichrestatesanoptimizationprobleminrecursiveformthewordprogrammingindynamicprogramminghasnoparticularconnectiontocomputerprogrammingatallandinsteadcomesfromthetermmathematicalprogrammingasynonymforoptimizationthustheprogramistheoptimalplanforactionthatisproducedforinstanceafinalizedscheduleofeventsatanexhibitionissometimescalledaprogramprogramminginthissensemeansfindinganacceptableplanofactionanalgorithmoptimalsubstructuremeansthatoptimalsolutionsofsubproblemscanbeusedtofindtheoptimalsolutionsoftheoverallproblemforexampletheshortestpathtoagoalfromavertexinagraphcanbefoundbyfirstcomputingtheshortestpathtothegoalfromalladjacentverticesandthenusingthistopickthebestoverallpathasshowninfigure1ingeneralwecansolveaproblemwithoptimalsubstructureusingathreestepprocess1breaktheproblemintosmallersubproblems2solvetheseproblemsoptimallyusingthisthreestepprocessrecursively3usetheseoptimalsolutionstoconstructanoptimalsolutionfortheoriginalproblemthesubproblemsarethemselvessolvedbydividingthemintosubsubproblemsandsoonuntilwereachsomesimplecasethatissolvableinconstanttimefigure2thesubproblemgraphforthefibonaccisequencethatitisnotatreebutadagindicatesoverlappingsubproblemstosaythataproblemhasoverlappingsubproblemsistosaythatthesamesubproblemsareusedtosolvemanydifferentlargerproblemsforexampleinthefibonaccisequencef3f1+f2andf4f2+f3â€”computingeachnumberinvolvescomputingf2becausebothf3andf4areneededtocomputef5anaiveapproachtocomputingf5mayendupcomputingf2twiceormorethisapplieswheneveroverlappingsubproblemsarepresentanaiveapproachmaywastetimerecomputingoptimalsolutionstosubproblemsithasalreadysolvedinordertoavoidthisweinsteadsavethesolutionstoproblemswehavealreadysolvedthenifweneedtosolvethesameproblemlaterwecanretrieveandreuseouralreadycomputedsolutionthisapproachiscalledmemoizationnotmemorizationalthoughthistermalsofitsifwearesurewewontneedaparticularsolutionanymorewecanthrowitawaytosavespaceinsomecaseswecanevencomputethesolutionstosubproblemsweknowthatwellneedinadvance