inheritanceisabasicconceptinobjectorientedprogrammingitmodelsthereuseofexistingclasscodeinnewclasses–theisakindofrelationshipforexampleahouseisakindofbuildingsimilarlyanofficeblockisakindofbuildingbothhouseandofficeblockwillinheritcertaincharacteristicsfrombuildingsbutalsohavetheirownpersonalcharacteristics–ahousemayhaveanumberofoccupantswhereasanofficeblockwillhaveanumberofofficeshoweverthesepersonalcharacteristicsdontapplytoalltypesofbuildingsinthisexamplethebuildingwouldbeconsideredthesuperclass–itcontainsgeneralcharacteristicsforotherobjectstoinherit–andthehouseandofficeblockarebothsubclasses–theyarespecifictypesandspecialisethecharacteristicsofthesuperclassjavaallowsobjectinheritancewhenoneclassinheritsfromanotherclassallthepublicvariablesandmethodsareavailabletothesubclasspublicclassshape{privatecolorcolourpublicvoidsetcolourcolornewcolour{colournewcolour}}publicclasscircleextendsshape{privateintradiuspublicvoidsetradiusintnewradius{radiusnewradius}}inthisexamplethecircleclassisasubclassoftheshapeclasstheshapeclassprovidesapublicsetcolourmethodwhichwillbeavailabletothecircleclassandothersubclassesofshapehowevertheprivatevariablecolourasdefinedintheshapeclasswillnotbeavailablefordirectmanipulationbythecircleclassbecauseitisnotinheritedthecircleclassspecialisestheshapeclasswhichmeansthatsetradiusisavailabletothecircleclassandallsubclassesofcirclebutitisntavailabletothesuperclassshape